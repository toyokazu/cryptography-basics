<% content_for :title do -%>
  使い捨てパッド
<% end -%>
<h1>使い捨てパッド</h1>

<h2>概要</h2>

<p>2進数とASCII Code，そして排他的論理和について学んだあなたは，最強の暗号を学ぶ準備ができました．使い捨てパッドです．使い捨てパッドは2進数の平文に対して，同じ長さの2進数の鍵を用意し，2つの値の排他的論理和を取ることで，暗号文を作成します．鍵は一度しか使わず，毎回異なる値（真の乱数）を使います．鍵を使い終わったら捨ててしまうため「使い捨てパッド」と呼ばれています．</p>

<h2>体験</h2>

<p>コンピュータで計算した乱数 (真の乱数ではありません) ですが，以下にランダムに生成された鍵と，それを用いて暗号化した結果について例を示します．</p>

<h3>暗号化の例</h3>

<p>使い捨てパッドで下記の鍵を用いて文字列を暗号化した例です．使い捨てパッドを適用するためには，文字列を2進数に変換してから適用する必要があります．暗号化後の2進数は文字列で表示することもできますが，文字コードが割り当てられていない値も多くあるため，文字化けしたような読めない文字列になることが多いです．ここでは暗号化後の値は便宜上そのまま2進数で表記します．</p>

暗号化前 (平文)：　　　 <%= @before %><br/>
暗号化前 (平文, 2進数)：<%= @plain.join(", ") %><br/>
鍵：　　　　　　　　　 <%= @key.join(", ") %><br/>
暗号化後 (暗号文)： 　　<%= @after.join(", ") %>


<h2>問題に挑戦</h2>

<p>使い捨てパッドの演習問題です．文字列の2進数への変換，2進数から文字列への変換には，<%= link_to 'ASCIIコード表', ascii_code_path, :target => "_blank" -%>を利用してください．</p>

<%= link_to '演習問題1: 暗号化（平文を暗号文にする）', one_time_pad_exercises_1_url(params.merge(:key => @key)) %><br/>
<%= link_to '演習問題2: 復号化（暗号文を平文に戻す）', one_time_pad_exercises_2_url(params.merge(:key => @key)) %><br/>

<h2>終わりに</h2>

<p>最後まで本アプリケーションを体験いただきありがとうございます．暗号アルゴリズムにおいては，「鍵」がとても大事な役割を果たしていることが理解いただけましたでしょうか？</p>
<p>また，最強の暗号といわれる使い捨てパッドは，比較的シンプルなものであることが理解いただけましたでしょうか？こんなにシンプルで強力な暗号なのに使われているのを聞いたことがないという方もいらっしゃるでしょう．実は使い捨てパッドは暗号化する文書と同じ長さの鍵を暗号文を送りたい相手に事前に「安全」に届ける必要があるのですが，これは文書を安全に届けるのと同じコストがかかってしまいます．しかも鍵が再利用できません．というわけで本当にコストをかけても安全にかつ短い時間で遠隔の人に情報を届けたいときにだけ使える暗号といえます．実際に軍事目的などで利用された実績があります．ただし，私達が普段利用するにはちょっとコストがかかりすぎますね．</p>
<p>実際にはもっと低コストで高い安全性を実現する暗号アルゴリズムがたくさん提案されています．興味をもった人は是非勉強してみてください．</p>
